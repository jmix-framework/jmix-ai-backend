plugins {
    id 'io.jmix' version '2.6.1'
    id 'java'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.9'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.vaadin'

jmix {
    bomVersion = '2.6.1'
}

group = 'io.jmix.ai'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://nexus.jmix.io/repository/public'
    }
}

def springAiVersion = '1.0.0'

dependencies {
    implementation "org.springframework.ai:spring-ai-starter-model-openai:$springAiVersion"
    implementation "org.springframework.ai:spring-ai-pgvector-store:$springAiVersion"
    implementation "org.springframework.ai:spring-ai-advisors-vector-store:$springAiVersion"
    implementation "org.springframework.ai:spring-ai-rag:$springAiVersion"
    implementation "org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc:$springAiVersion"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:1.32.1-alpha'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

    implementation 'org.commonmark:commonmark:0.24.0'
    implementation 'org.jsoup:jsoup:1.17.2'
    implementation 'org.asciidoctor:asciidoctorj:3.0.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-flowui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'
    implementation 'io.jmix.flowui:jmix-flowui-starter'
    implementation 'io.jmix.flowui:jmix-flowui-data-starter'
    implementation 'io.jmix.flowui:jmix-flowui-themes'
    implementation 'io.jmix.datatools:jmix-datatools-starter'
    implementation 'io.jmix.datatools:jmix-datatools-flowui-starter'
    implementation 'io.jmix.gridexport:jmix-gridexport-flowui-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.postgresql:postgresql'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.jmix.flowui:jmix-flowui-test-assist'
    testImplementation 'org.hsqldb:hsqldb'
}

configurations.implementation {
    exclude group: 'com.vaadin', module: 'hilla'
    exclude group: 'com.vaadin', module: 'hilla-dev'
    exclude group: 'com.vaadin', module: 'copilot'
}

test {
    useJUnitPlatform()
}

idea {
    module {
        excludeDirs.addAll(files '.jmix', 'node_modules', 'src/main/frontend/generated/', 'src/main/bundles')
    }
}

vaadin {
    optimizeBundle = false
}

tasks.named("bootBuildImage") {
    imageName = "jmix-ai-backend"
    environment["BPE_APPEND_JAVA_TOOL_OPTIONS"] = " -Dspring.profiles.active=prod"
}